apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: mpas-product-controller
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: mpas-product-controller
    control-plane: mpas-product-controller
  name: mpas-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: productdeploymentgenerators.mpas.ocm.software
spec:
  group: mpas.ocm.software
  names:
    kind: ProductDeploymentGenerator
    listKind: ProductDeploymentGeneratorList
    plural: productdeploymentgenerators
    singular: productdeploymentgenerator
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProductDeploymentGenerator is the Schema for the productdeploymentgenerators
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProductDeploymentGeneratorSpec defines the desired state
              of ProductDeploymentGenerator
            properties:
              interval:
                description: Interval is the reconciliation interval, i.e. at what
                  interval shall a reconciliation happen. This is used to requeue
                  objects for reconciliation in case the related subscription hasn't
                  been finished yet.
                type: string
              repositoryRef:
                description: LocalObjectReference contains enough information to locate
                  the referenced Kubernetes resource object.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - name
                type: object
              serviceAccountName:
                description: ServiceAccountName is used to access ocm component repositories.
                  No other auth option is defined. https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account
                type: string
              subscriptionRef:
                description: SubscriptionRef contains the reference to the component
                  subscription from which the ProductDeployment is generated.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
            required:
            - interval
            - serviceAccountName
            - subscriptionRef
            type: object
          status:
            description: ProductDeploymentGeneratorStatus defines the observed state
              of ProductDeploymentGenerator
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastReconciledVersion:
                description: LastReconciledVersion contains the ComponentSubscription's
                  version that was used to generate the ProductDeployment.
                type: string
              latestSnapshotDigest:
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              snapshotName:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: productdeploymentpipelines.mpas.ocm.software
spec:
  group: mpas.ocm.software
  names:
    kind: ProductDeploymentPipeline
    listKind: ProductDeploymentPipelineList
    plural: productdeploymentpipelines
    singular: productdeploymentpipeline
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProductDeploymentPipeline is the Schema for the productdeploymentpipelines
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProductDeploymentPipelineSpec defines the desired state of
              ProductDeploymentPipeline
            properties:
              componentVersionRef:
                description: ComponentVersionRef is the name of the generated component
                  version object.
                type: string
              configuration:
                description: Configuration defines a list of rules to follow and an
                  optional values file.
                properties:
                  rules:
                    properties:
                      extraIdentity:
                        additionalProperties:
                          type: string
                        description: ExtraIdentity is the identity of an object. An
                          additional label with key "name" ist not allowed
                        type: object
                      labels:
                        description: Labels defines an optional set of additional
                          labels describing the object.
                        items:
                          description: Label is a label that can be set on objects.
                          properties:
                            name:
                              description: Name is the unique name of the label.
                              type: string
                            signing:
                              description: Signing describes whether the label should
                                be included into the signature
                              type: boolean
                            value:
                              description: Value is the json/yaml data of the label
                              x-kubernetes-preserve-unknown-fields: true
                            version:
                              description: Version is the optional specification version
                                of the attribute value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      name:
                        description: Name is the context unique name of the object.
                        type: string
                      referencePath:
                        items:
                          additionalProperties:
                            type: string
                          description: Identity describes the identity of an object.
                            Only ascii characters are allowed
                          type: object
                        type: array
                      version:
                        description: Version is the semver version of the object.
                        type: string
                    required:
                    - name
                    - version
                    type: object
                required:
                - rules
                type: object
              localization:
                properties:
                  extraIdentity:
                    additionalProperties:
                      type: string
                    description: ExtraIdentity is the identity of an object. An additional
                      label with key "name" ist not allowed
                    type: object
                  labels:
                    description: Labels defines an optional set of additional labels
                      describing the object.
                    items:
                      description: Label is a label that can be set on objects.
                      properties:
                        name:
                          description: Name is the unique name of the label.
                          type: string
                        signing:
                          description: Signing describes whether the label should
                            be included into the signature
                          type: boolean
                        value:
                          description: Value is the json/yaml data of the label
                          x-kubernetes-preserve-unknown-fields: true
                        version:
                          description: Version is the optional specification version
                            of the attribute value
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  name:
                    description: Name is the context unique name of the object.
                    type: string
                  referencePath:
                    items:
                      additionalProperties:
                        type: string
                      description: Identity describes the identity of an object. Only
                        ascii characters are allowed
                      type: object
                    type: array
                  version:
                    description: Version is the semver version of the object.
                    type: string
                required:
                - name
                - version
                type: object
              resource:
                properties:
                  extraIdentity:
                    additionalProperties:
                      type: string
                    description: ExtraIdentity is the identity of an object. An additional
                      label with key "name" ist not allowed
                    type: object
                  labels:
                    description: Labels defines an optional set of additional labels
                      describing the object.
                    items:
                      description: Label is a label that can be set on objects.
                      properties:
                        name:
                          description: Name is the unique name of the label.
                          type: string
                        signing:
                          description: Signing describes whether the label should
                            be included into the signature
                          type: boolean
                        value:
                          description: Value is the json/yaml data of the label
                          x-kubernetes-preserve-unknown-fields: true
                        version:
                          description: Version is the optional specification version
                            of the attribute value
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  name:
                    description: Name is the context unique name of the object.
                    type: string
                  referencePath:
                    items:
                      additionalProperties:
                        type: string
                      description: Identity describes the identity of an object. Only
                        ascii characters are allowed
                      type: object
                    type: array
                  version:
                    description: Version is the semver version of the object.
                    type: string
                required:
                - name
                - version
                type: object
              targetRef:
                description: NamespacedObjectReference contains enough information
                  to locate the referenced Kubernetes resource object in any namespace.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
              targetRole:
                description: TargetRole the role defining what targets are available
                  to deploy to.
                properties:
                  selector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  type:
                    description: TargetType defines valid types for Targets.
                    type: string
                required:
                - selector
                - type
                type: object
              validation:
                properties:
                  extraIdentity:
                    additionalProperties:
                      type: string
                    description: ExtraIdentity is the identity of an object. An additional
                      label with key "name" ist not allowed
                    type: object
                  labels:
                    description: Labels defines an optional set of additional labels
                      describing the object.
                    items:
                      description: Label is a label that can be set on objects.
                      properties:
                        name:
                          description: Name is the unique name of the label.
                          type: string
                        signing:
                          description: Signing describes whether the label should
                            be included into the signature
                          type: boolean
                        value:
                          description: Value is the json/yaml data of the label
                          x-kubernetes-preserve-unknown-fields: true
                        version:
                          description: Version is the optional specification version
                            of the attribute value
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  name:
                    description: Name is the context unique name of the object.
                    type: string
                  referencePath:
                    items:
                      additionalProperties:
                        type: string
                      description: Identity describes the identity of an object. Only
                        ascii characters are allowed
                      type: object
                    type: array
                  version:
                    description: Version is the semver version of the object.
                    type: string
                required:
                - name
                - version
                type: object
            required:
            - componentVersionRef
            - configuration
            - localization
            - resource
            - targetRole
            - validation
            type: object
          status:
            description: ProductDeploymentPipelineStatus defines the observed state
              of ProductDeploymentPipeline
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              snapshotRef:
                description: SnapshotRef references the last snapshot that this pipeline
                  has eventually produced once completed.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
              targetRef:
                description: SelectedTarget defines the target in which this pipeline
                  was deployed into.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: productdeployments.mpas.ocm.software
spec:
  group: mpas.ocm.software
  names:
    kind: ProductDeployment
    listKind: ProductDeploymentList
    plural: productdeployments
    singular: productdeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProductDeployment is the Schema for the productdeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProductDeploymentSpec defines the desired state of ProductDeployment.
            properties:
              component:
                description: Component holds information about a reconciled component.
                properties:
                  name:
                    description: Name specifies the component name.
                    type: string
                  registry:
                    description: Version specifies the component registry.
                    properties:
                      url:
                        type: string
                    required:
                    - url
                    type: object
                  version:
                    description: Version specifies the component version.
                    type: string
                required:
                - name
                - registry
                - version
                type: object
              pipelines:
                items:
                  description: Pipeline defines a set of pipeline objects.
                  properties:
                    configuration:
                      description: Configuration defines a list of rules to follow
                        and an optional values file.
                      properties:
                        rules:
                          properties:
                            extraIdentity:
                              additionalProperties:
                                type: string
                              description: ExtraIdentity is the identity of an object.
                                An additional label with key "name" ist not allowed
                              type: object
                            labels:
                              description: Labels defines an optional set of additional
                                labels describing the object.
                              items:
                                description: Label is a label that can be set on objects.
                                properties:
                                  name:
                                    description: Name is the unique name of the label.
                                    type: string
                                  signing:
                                    description: Signing describes whether the label
                                      should be included into the signature
                                    type: boolean
                                  value:
                                    description: Value is the json/yaml data of the
                                      label
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    description: Version is the optional specification
                                      version of the attribute value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            name:
                              description: Name is the context unique name of the
                                object.
                              type: string
                            referencePath:
                              items:
                                additionalProperties:
                                  type: string
                                description: Identity describes the identity of an
                                  object. Only ascii characters are allowed
                                type: object
                              type: array
                            version:
                              description: Version is the semver version of the object.
                              type: string
                          required:
                          - name
                          - version
                          type: object
                      required:
                      - rules
                      type: object
                    localization:
                      properties:
                        extraIdentity:
                          additionalProperties:
                            type: string
                          description: ExtraIdentity is the identity of an object.
                            An additional label with key "name" ist not allowed
                          type: object
                        labels:
                          description: Labels defines an optional set of additional
                            labels describing the object.
                          items:
                            description: Label is a label that can be set on objects.
                            properties:
                              name:
                                description: Name is the unique name of the label.
                                type: string
                              signing:
                                description: Signing describes whether the label should
                                  be included into the signature
                                type: boolean
                              value:
                                description: Value is the json/yaml data of the label
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the optional specification
                                  version of the attribute value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        name:
                          description: Name is the context unique name of the object.
                          type: string
                        referencePath:
                          items:
                            additionalProperties:
                              type: string
                            description: Identity describes the identity of an object.
                              Only ascii characters are allowed
                            type: object
                          type: array
                        version:
                          description: Version is the semver version of the object.
                          type: string
                      required:
                      - name
                      - version
                      type: object
                    name:
                      type: string
                    resource:
                      properties:
                        extraIdentity:
                          additionalProperties:
                            type: string
                          description: ExtraIdentity is the identity of an object.
                            An additional label with key "name" ist not allowed
                          type: object
                        labels:
                          description: Labels defines an optional set of additional
                            labels describing the object.
                          items:
                            description: Label is a label that can be set on objects.
                            properties:
                              name:
                                description: Name is the unique name of the label.
                                type: string
                              signing:
                                description: Signing describes whether the label should
                                  be included into the signature
                                type: boolean
                              value:
                                description: Value is the json/yaml data of the label
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the optional specification
                                  version of the attribute value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        name:
                          description: Name is the context unique name of the object.
                          type: string
                        referencePath:
                          items:
                            additionalProperties:
                              type: string
                            description: Identity describes the identity of an object.
                              Only ascii characters are allowed
                            type: object
                          type: array
                        version:
                          description: Version is the semver version of the object.
                          type: string
                      required:
                      - name
                      - version
                      type: object
                    targetRole:
                      description: TargetRole the role defining what targets are available
                        to deploy to.
                      properties:
                        selector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        type:
                          description: TargetType defines valid types for Targets.
                          type: string
                      required:
                      - selector
                      - type
                      type: object
                    validation:
                      properties:
                        extraIdentity:
                          additionalProperties:
                            type: string
                          description: ExtraIdentity is the identity of an object.
                            An additional label with key "name" ist not allowed
                          type: object
                        labels:
                          description: Labels defines an optional set of additional
                            labels describing the object.
                          items:
                            description: Label is a label that can be set on objects.
                            properties:
                              name:
                                description: Name is the unique name of the label.
                                type: string
                              signing:
                                description: Signing describes whether the label should
                                  be included into the signature
                                type: boolean
                              value:
                                description: Value is the json/yaml data of the label
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the optional specification
                                  version of the attribute value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        name:
                          description: Name is the context unique name of the object.
                          type: string
                        referencePath:
                          items:
                            additionalProperties:
                              type: string
                            description: Identity describes the identity of an object.
                              Only ascii characters are allowed
                            type: object
                          type: array
                        version:
                          description: Version is the semver version of the object.
                          type: string
                      required:
                      - name
                      - version
                      type: object
                  required:
                  - configuration
                  - localization
                  - name
                  - resource
                  - targetRole
                  - validation
                  type: object
                type: array
              serviceAccountName:
                type: string
            required:
            - component
            - pipelines
            - serviceAccountName
            type: object
          status:
            description: ProductDeploymentStatus defines the observed state of ProductDeployment.
            properties:
              activePipelines:
                description: ActivePipelines has all the pipelines which are all still
                  running.
                items:
                  type: string
                type: array
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: productdescriptions.mpas.ocm.software
spec:
  group: mpas.ocm.software
  names:
    kind: ProductDescription
    listKind: ProductDescriptionList
    plural: productdescriptions
    singular: productdescription
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProductDescription is the Schema for the productdescriptions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProductDescriptionSpec defines the desired state of ProductDescription
            properties:
              description:
                type: string
              pipelines:
                items:
                  description: ProductDescriptionPipeline defines the details for
                    a pipeline item.
                  properties:
                    configuration:
                      description: DescriptionConfiguration contains details one parsing
                        configuration items in a project description.
                      properties:
                        readme:
                          properties:
                            extraIdentity:
                              additionalProperties:
                                type: string
                              description: ExtraIdentity is the identity of an object.
                                An additional label with key "name" ist not allowed
                              type: object
                            labels:
                              description: Labels defines an optional set of additional
                                labels describing the object.
                              items:
                                description: Label is a label that can be set on objects.
                                properties:
                                  name:
                                    description: Name is the unique name of the label.
                                    type: string
                                  signing:
                                    description: Signing describes whether the label
                                      should be included into the signature
                                    type: boolean
                                  value:
                                    description: Value is the json/yaml data of the
                                      label
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    description: Version is the optional specification
                                      version of the attribute value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            name:
                              description: Name is the context unique name of the
                                object.
                              type: string
                            referencePath:
                              items:
                                additionalProperties:
                                  type: string
                                description: Identity describes the identity of an
                                  object. Only ascii characters are allowed
                                type: object
                              type: array
                            version:
                              description: Version is the semver version of the object.
                              type: string
                          required:
                          - name
                          - version
                          type: object
                        rules:
                          properties:
                            extraIdentity:
                              additionalProperties:
                                type: string
                              description: ExtraIdentity is the identity of an object.
                                An additional label with key "name" ist not allowed
                              type: object
                            labels:
                              description: Labels defines an optional set of additional
                                labels describing the object.
                              items:
                                description: Label is a label that can be set on objects.
                                properties:
                                  name:
                                    description: Name is the unique name of the label.
                                    type: string
                                  signing:
                                    description: Signing describes whether the label
                                      should be included into the signature
                                    type: boolean
                                  value:
                                    description: Value is the json/yaml data of the
                                      label
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    description: Version is the optional specification
                                      version of the attribute value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            name:
                              description: Name is the context unique name of the
                                object.
                              type: string
                            referencePath:
                              items:
                                additionalProperties:
                                  type: string
                                description: Identity describes the identity of an
                                  object. Only ascii characters are allowed
                                type: object
                              type: array
                            version:
                              description: Version is the semver version of the object.
                              type: string
                          required:
                          - name
                          - version
                          type: object
                      required:
                      - readme
                      - rules
                      type: object
                    localization:
                      properties:
                        extraIdentity:
                          additionalProperties:
                            type: string
                          description: ExtraIdentity is the identity of an object.
                            An additional label with key "name" ist not allowed
                          type: object
                        labels:
                          description: Labels defines an optional set of additional
                            labels describing the object.
                          items:
                            description: Label is a label that can be set on objects.
                            properties:
                              name:
                                description: Name is the unique name of the label.
                                type: string
                              signing:
                                description: Signing describes whether the label should
                                  be included into the signature
                                type: boolean
                              value:
                                description: Value is the json/yaml data of the label
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the optional specification
                                  version of the attribute value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        name:
                          description: Name is the context unique name of the object.
                          type: string
                        referencePath:
                          items:
                            additionalProperties:
                              type: string
                            description: Identity describes the identity of an object.
                              Only ascii characters are allowed
                            type: object
                          type: array
                        version:
                          description: Version is the semver version of the object.
                          type: string
                      required:
                      - name
                      - version
                      type: object
                    name:
                      type: string
                    source:
                      properties:
                        extraIdentity:
                          additionalProperties:
                            type: string
                          description: ExtraIdentity is the identity of an object.
                            An additional label with key "name" ist not allowed
                          type: object
                        labels:
                          description: Labels defines an optional set of additional
                            labels describing the object.
                          items:
                            description: Label is a label that can be set on objects.
                            properties:
                              name:
                                description: Name is the unique name of the label.
                                type: string
                              signing:
                                description: Signing describes whether the label should
                                  be included into the signature
                                type: boolean
                              value:
                                description: Value is the json/yaml data of the label
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the optional specification
                                  version of the attribute value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        name:
                          description: Name is the context unique name of the object.
                          type: string
                        referencePath:
                          items:
                            additionalProperties:
                              type: string
                            description: Identity describes the identity of an object.
                              Only ascii characters are allowed
                            type: object
                          type: array
                        version:
                          description: Version is the semver version of the object.
                          type: string
                      required:
                      - name
                      - version
                      type: object
                    targetRoleName:
                      type: string
                    validation:
                      properties:
                        extraIdentity:
                          additionalProperties:
                            type: string
                          description: ExtraIdentity is the identity of an object.
                            An additional label with key "name" ist not allowed
                          type: object
                        labels:
                          description: Labels defines an optional set of additional
                            labels describing the object.
                          items:
                            description: Label is a label that can be set on objects.
                            properties:
                              name:
                                description: Name is the unique name of the label.
                                type: string
                              signing:
                                description: Signing describes whether the label should
                                  be included into the signature
                                type: boolean
                              value:
                                description: Value is the json/yaml data of the label
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the optional specification
                                  version of the attribute value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        name:
                          description: Name is the context unique name of the object.
                          type: string
                        referencePath:
                          items:
                            additionalProperties:
                              type: string
                            description: Identity describes the identity of an object.
                              Only ascii characters are allowed
                            type: object
                          type: array
                        version:
                          description: Version is the semver version of the object.
                          type: string
                      required:
                      - name
                      - version
                      type: object
                  required:
                  - name
                  - source
                  - validation
                  type: object
                type: array
              targetRoles:
                items:
                  description: TargetRoles defines a target role with a name.
                  properties:
                    name:
                      type: string
                    selector:
                      description: A label selector is a label query over a set of
                        resources. The result of matchLabels and matchExpressions
                        are ANDed. An empty label selector matches all objects. A
                        null label selector matches no objects.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    type:
                      description: TargetType defines valid types for Targets.
                      type: string
                  required:
                  - name
                  - selector
                  - type
                  type: object
                type: array
            required:
            - description
            - pipelines
            type: object
          status:
            description: ProductDescriptionStatus defines the observed state of ProductDescription
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: targets.mpas.ocm.software
spec:
  group: mpas.ocm.software
  names:
    kind: Target
    listKind: TargetList
    plural: targets
    singular: target
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Target is the Schema for the targets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TargetSpec defines the desired state of Target
            properties:
              access:
                x-kubernetes-preserve-unknown-fields: true
              interval:
                description: Interval is the reconciliation interval, i.e. at what
                  interval shall a reconciliation happen. This is used to requeue
                  objects for reconciliation in case the related subscription hasn't
                  been finished yet.
                type: string
              selector:
                description: 'selector is a label query over secrets that should be
                  used for target access. If found, the secrets will added to the
                  target ServiceAccount as image pull secrets. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  to be created in the target namespace.
                type: string
              type:
                description: TargetType defines valid types for Targets.
                type: string
            required:
            - interval
            - type
            type: object
          status:
            description: TargetStatus defines the observed state of Target
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: validations.mpas.ocm.software
spec:
  group: mpas.ocm.software
  names:
    kind: Validation
    listKind: ValidationList
    plural: validations
    singular: validation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Validation is the Schema for the validations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ValidationSpec defines the desired state of Validation Fetches
              pull request ID and GitRepository from the Sync object.
            properties:
              interval:
                type: string
              serviceAccountName:
                type: string
              syncRef:
                description: SyncRef references the Sync request that will create
                  the git repository to track the values.yaml file.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
              validationRules:
                description: ValidationRules points to the snapshot containing the
                  rules
                items:
                  description: ValidationData contains information about the rules
                    and to which resource they belong to.
                  properties:
                    data:
                      format: byte
                      type: string
                    name:
                      type: string
                  required:
                  - data
                  - name
                  type: object
                type: array
            required:
            - interval
            - serviceAccountName
            - syncRef
            - validationRules
            type: object
          status:
            description: ValidationStatus defines the observed state of Validation
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              gitRepositoryRef:
                description: GitRepositoryRef points to the GitRepository that tracks
                  changes to the values.yaml file.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
              lastValidatedDigest:
                description: LastValidatedDigest contains the last digest that has
                  been validated.
                type: string
              lastValidatedDigestOutcome:
                description: LastValidatedDigestOutcome contains the outcome of the
                  last digest's validation. Can be failed or success.
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: mpas-product-controller
    app.kubernetes.io/instance: mpas-product-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: mpas-product-controller
  name: mpas-product-controller
  namespace: mpas-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: mpas-product-controller
    app.kubernetes.io/instance: mpas-product-controller-leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: mpas-product-controller
  name: mpas-product-controller-leader-election-role
  namespace: mpas-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: mpas-product-controller-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - componentdescriptors
  - componentversions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - componentsubscriptions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - configurations
  - localizations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - fluxdeployers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - snapshots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - snapshots/finalizers
  verbs:
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - snapshots/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - syncs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeploymentgenerators
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeploymentgenerators/finalizers
  verbs:
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeploymentgenerators/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeploymentpipelines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeploymentpipelines/finalizers
  verbs:
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeploymentpipelines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeployments/finalizers
  verbs:
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - productdeployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - projects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mpas.ocm.software
  resources:
  - repositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mpas.ocm.software
  resources:
  - repositories/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - targets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mpas.ocm.software
  resources:
  - targets/finalizers
  verbs:
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - targets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - validations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mpas.ocm.software
  resources:
  - validations/finalizers
  verbs:
  - update
- apiGroups:
  - mpas.ocm.software
  resources:
  - validations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - ocirepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: mpas-product-controller
    app.kubernetes.io/instance: mpas-product-controller-leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: mpas-product-controller
  name: mpas-product-controller-leader-election-rolebinding
  namespace: mpas-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mpas-product-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: mpas-product-controller
  namespace: mpas-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: mpas-product-controller
    app.kubernetes.io/instance: mpas-product-controller-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: mpas-product-controller
  name: mpas-product-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mpas-product-controller-role
subjects:
- kind: ServiceAccount
  name: mpas-product-controller
  namespace: mpas-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mpas-product-controller
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: mpas-product-controller
    app.kubernetes.io/instance: mpas-product-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: mpas-product-controller
  name: mpas-product-controller
  namespace: mpas-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mpas-product-controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: mpas-product-controller
    spec:
      containers:
      - args:
        - --zap-log-level=4
        - --leader-elect
        - --oci-registry-addr=registry.ocm-system.svc.cluster.local:5000
        command:
        - /manager
        image: ghcr.io/open-component-model/mpas-bootstrap-component/open-component-model/mpas-product-controller:v0.6.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/ssl/certs/registry-root.pem
          name: certificates
          subPath: registry-root.pem
      securityContext:
        runAsNonRoot: true
      serviceAccountName: mpas-product-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - name: certificates
        secret:
          items:
          - key: ca.crt
            path: registry-root.pem
          secretName: ocm-registry-tls-certs
